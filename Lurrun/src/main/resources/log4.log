08:44:32> DEBUG (Log4JLogger.java:63): Using PluginRegistry org.datanucleus.plugin.NonManagedPluginRegistry
08:44:32> DEBUG (Log4JLogger.java:63): Registering bundle org.sonatype.inject version 2.3.0 at URL file:/private/var/root/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar.
08:44:32> DEBUG (Log4JLogger.java:63): Loading extension points from plug-in file jar:file:/private/var/root/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar!/plugin.xml.
08:44:32> DEBUG (Log4JLogger.java:63): Loading extensions from plug-in file jar:file:/private/var/root/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar!/plugin.xml.
08:44:32> DEBUG (Log4JLogger.java:63): Registering bundle org.datanucleus version 5.1.0.m2 at URL file:/private/var/root/.m2/repository/org/datanucleus/datanucleus-core/5.1.0-m2/datanucleus-core-5.1.0-m2.jar.
08:44:32> DEBUG (Log4JLogger.java:63): Loading extension points from plug-in file jar:file:/private/var/root/.m2/repository/org/datanucleus/datanucleus-core/5.1.0-m2/datanucleus-core-5.1.0-m2.jar!/plugin.xml.
08:44:33> DEBUG (Log4JLogger.java:63): Loading extensions from plug-in file jar:file:/private/var/root/.m2/repository/org/datanucleus/datanucleus-core/5.1.0-m2/datanucleus-core-5.1.0-m2.jar!/plugin.xml.
08:44:33> DEBUG (Log4JLogger.java:63): Registering bundle org.datanucleus.api.jdo version 5.1.0.m2 at URL file:/private/var/root/.m2/repository/org/datanucleus/datanucleus-api-jdo/5.1.0-m2/datanucleus-api-jdo-5.1.0-m2.jar.
08:44:33> DEBUG (Log4JLogger.java:63): Loading extension points from plug-in file jar:file:/private/var/root/.m2/repository/org/datanucleus/datanucleus-api-jdo/5.1.0-m2/datanucleus-api-jdo-5.1.0-m2.jar!/plugin.xml.
08:44:33> DEBUG (Log4JLogger.java:63): Loading extensions from plug-in file jar:file:/private/var/root/.m2/repository/org/datanucleus/datanucleus-api-jdo/5.1.0-m2/datanucleus-api-jdo-5.1.0-m2.jar!/plugin.xml.
08:44:33> DEBUG (Log4JLogger.java:63): Registering bundle org.datanucleus.store.rdbms version 5.1.0.m2 at URL file:/private/var/root/.m2/repository/org/datanucleus/datanucleus-rdbms/5.1.0-m2/datanucleus-rdbms-5.1.0-m2.jar.
08:44:33> DEBUG (Log4JLogger.java:63): Loading extension points from plug-in file jar:file:/private/var/root/.m2/repository/org/datanucleus/datanucleus-rdbms/5.1.0-m2/datanucleus-rdbms-5.1.0-m2.jar!/plugin.xml.
08:44:33> DEBUG (Log4JLogger.java:63): Loading extensions from plug-in file jar:file:/private/var/root/.m2/repository/org/datanucleus/datanucleus-rdbms/5.1.0-m2/datanucleus-rdbms-5.1.0-m2.jar!/plugin.xml.
08:44:33> DEBUG (Log4JLogger.java:63): Tipos de Java inicializando ...
08:44:33> DEBUG (Log4JLogger.java:63): Soporte para tipos de Java listo : tipos soportados = [B, [C, [D, [F, [I, [J, [Ljava.lang.Boolean;, [Ljava.lang.Byte;, [Ljava.lang.Character;, [Ljava.lang.Double;, [Ljava.lang.Enum;, [Ljava.lang.Float;, [Ljava.lang.Integer;, [Ljava.lang.Long;, [Ljava.lang.Number;, [Ljava.lang.Object;, [Ljava.lang.Short;, [Ljava.lang.String;, [Ljava.math.BigDecimal;, [Ljava.math.BigInteger;, [Ljava.util.Date;, [Ljava.util.Locale;, [S, [Z, boolean, byte, char, double, float, int, java.awt.Color, java.awt.image.BufferedImage, java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Class, java.lang.Double, java.lang.Enum, java.lang.Float, java.lang.Integer, java.lang.Long, java.lang.Number, java.lang.Short, java.lang.String, java.lang.StringBuffer, java.lang.StringBuilder, java.math.BigDecimal, java.math.BigInteger, java.net.URI, java.net.URL, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.time.Duration, java.time.Instant, java.time.LocalDate, java.time.LocalDateTime, java.time.LocalTime, java.time.MonthDay, java.time.OffsetDateTime, java.time.OffsetTime, java.time.Period, java.time.Year, java.time.YearMonth, java.time.ZonedDateTime, java.time.ZoneId, java.time.ZoneOffset, java.util.ArrayList, java.util.Arrays$ArrayList, java.util.BitSet, java.util.Calendar, java.util.Collection, java.util.Currency, java.util.Date, java.util.GregorianCalendar, java.util.HashMap, java.util.HashSet, java.util.Hashtable, java.util.LinkedHashMap, java.util.LinkedHashSet, java.util.LinkedList, java.util.List, java.util.Locale, java.util.Map, java.util.Optional, java.util.PriorityQueue, java.util.Properties, java.util.Queue, java.util.Set, java.util.SortedMap, java.util.SortedSet, java.util.Stack, java.util.TimeZone, java.util.TreeMap, java.util.TreeSet, java.util.UUID, java.util.Vector, long, short
08:44:33> DEBUG (Log4JLogger.java:63): Inicializando TypeConverters ...
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverters listo
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for byte[] to : java.nio.ByteBuffer
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for char[] to : java.nio.ByteBuffer
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for double[] to : java.nio.ByteBuffer
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for float[] to : java.nio.ByteBuffer
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for int[] to : java.nio.ByteBuffer
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for long[] to : java.nio.ByteBuffer
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for short[] to : java.nio.ByteBuffer
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for boolean[] to : java.nio.ByteBuffer
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.awt.Color to : int[],java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.awt.image.BufferedImage to : java.nio.ByteBuffer,byte[]
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.io.Serializable to : java.nio.ByteBuffer,byte[],java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.lang.Boolean to : java.lang.Integer,java.lang.Character
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.lang.Character to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.lang.Class to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.lang.Integer to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.lang.Long to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.lang.StringBuffer to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.lang.StringBuilder to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.math.BigDecimal to : java.lang.Double,java.nio.ByteBuffer,java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.math.BigInteger to : java.nio.ByteBuffer,java.lang.String,java.lang.Long
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.net.URI to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.net.URL to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.sql.Date to : java.util.Date,java.lang.String,java.lang.Long
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.sql.Time to : java.util.Date,java.lang.String,java.lang.Long
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.sql.Timestamp to : java.util.Date,java.lang.String,java.lang.Long
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.time.Duration to : java.lang.Double,java.lang.String,java.lang.Long
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.time.Instant to : java.util.Date,java.lang.String,java.lang.Long,java.sql.Timestamp
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.time.LocalDate to : java.util.Date,java.lang.String,java.sql.Date
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.time.LocalDateTime to : java.util.Date,java.lang.String,java.sql.Timestamp
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.time.LocalTime to : java.sql.Time,java.util.Date,java.lang.String,java.lang.Long
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.time.MonthDay to : int[],java.util.Date,java.lang.String,java.sql.Date
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.time.OffsetDateTime to : java.util.Date,java.lang.String,java.sql.Timestamp
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.time.OffsetTime to : java.sql.Time,java.lang.String,java.lang.Long
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.time.Period to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.time.Year to : java.lang.Integer,java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.time.YearMonth to : int[],java.util.Date,java.lang.String,java.sql.Date
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.time.ZonedDateTime to : java.lang.String,java.sql.Timestamp
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.time.ZoneId to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.time.ZoneOffset to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.util.BitSet to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.util.Calendar to : java.util.Date,java.lang.String,[Ljava.lang.Object;,java.sql.Timestamp
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.util.Currency to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.util.Date to : java.lang.String,java.lang.Long
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.util.Locale to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.util.TimeZone to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): TypeConverter(s) available for java.util.UUID to : java.lang.String
08:44:33> DEBUG (Log4JLogger.java:63): MetaDataManager : Input=(XML,Annotations), XML-Validation=false, XML-Suffices=(persistence=*.jdo, orm=orm, query=*.jdoquery), JDO-listener=false
08:44:33> INFO  (Log4JLogger.java:82): DataNucleus Enhancer (versión 5.1.0.m2) para el API "JDO" utilisando el JRE "{2}"
08:44:33> DEBUG (Log4JLogger.java:63): DataNucleus Enhancer : Classpath
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/org/datanucleus/datanucleus-maven-plugin/5.0.2/datanucleus-maven-plugin-5.0.2.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/org/codehaus/plexus/plexus-utils/3.0.8/plexus-utils-3.0.8.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/org/apache/maven/maven-artifact/3.0.4/maven-artifact-3.0.4.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/org/apache/maven/maven-plugin-api/3.0.4/maven-plugin-api-3.0.4.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/org/apache/maven/maven-model/3.0.4/maven-model-3.0.4.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/org/sonatype/sisu/sisu-inject-plexus/2.3.0/sisu-inject-plexus-2.3.0.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/org/sonatype/sisu/sisu-guava/0.9.9/sisu-guava-0.9.9.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.5/plexus-container-default-1.5.5.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.2.2/plexus-classworlds-2.2.2.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/org/apache/xbean/xbean-reflect/3.4/xbean-reflect-3.4.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/log4j/log4j/1.2.12/log4j-1.2.12.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/commons-logging/commons-logging-api/1.1/commons-logging-api-1.1.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/com/google/collections/google-collections/1.0/google-collections-1.0.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /private/var/root/.m2/repository/junit/junit/3.8.2/junit-3.8.2.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /Users/javiercarazo/Documents/workspace/SPQ/SPQ09/Lurrun/target/classes
08:44:33> DEBUG (Log4JLogger.java:63): >>  /var/root/.m2/repository/org/datanucleus/datanucleus-core/5.1.0-m2/datanucleus-core-5.1.0-m2.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /var/root/.m2/repository/org/datanucleus/datanucleus-api-jdo/5.1.0-m2/datanucleus-api-jdo-5.1.0-m2.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /var/root/.m2/repository/org/datanucleus/datanucleus-rdbms/5.1.0-m2/datanucleus-rdbms-5.1.0-m2.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /var/root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /var/root/.m2/repository/org/datanucleus/javax.jdo/3.2.0-m6/javax.jdo-3.2.0-m6.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /var/root/.m2/repository/javax/transaction/transaction-api/1.1/transaction-api-1.1.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /var/root/.m2/repository/mysql/mysql-connector-java/5.1.41/mysql-connector-java-5.1.41.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /var/root/.m2/repository/org/mockito/mockito-core/2.7.21/mockito-core-2.7.21.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /var/root/.m2/repository/org/ow2/asm/asm/5.2/asm-5.2.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /var/root/.m2/repository/org/slf4j/slf4j-log4j12/1.6.4/slf4j-log4j12-1.6.4.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /var/root/.m2/repository/org/slf4j/slf4j-simple/1.6.4/slf4j-simple-1.6.4.jar
08:44:33> DEBUG (Log4JLogger.java:63): >>  /var/root/.m2/repository/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing classes
08:44:33> DEBUG (Log4JLogger.java:63): MetaData Management : Carga de Metadata de las clases "[es.deusto.client.Client, es.deusto.server.db.dao.DAO, es.deusto.server.db.dao.IDAO, es.deusto.server.db.data.Company, es.deusto.server.db.data.Game, es.deusto.server.db.data.Genre, es.deusto.server.db.data.License, es.deusto.server.db.data.User, es.deusto.server.db.DB, es.deusto.server.db.IDB, es.deusto.server.remote.IRemote, es.deusto.server.remote.Remote, es.deusto.server.Server]" ...
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.client.Client" en /META-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.client.Client" en /WEB-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.client.Client" en /package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.client.Client" en /es/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.client.Client" en /es.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.client.Client" en /es/deusto/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.client.Client" en /es/deusto.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.client.Client" en /es/deusto/client/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.client.Client" en /es/deusto/client.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.client.Client" en /es/deusto/client/Client.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No hemos encontrado el MetaData del tipo "jdo" por la clase "es.deusto.client.Client"
08:44:33> DEBUG (Log4JLogger.java:63): Registrando la clase "es.deusto.client.Client" no tener Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.client.Client" no tiene MetaData o annotaciones.
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO" en /META-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO" en /WEB-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO" en /package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO" en /es/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO" en /es.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO" en /es/deusto/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO" en /es/deusto.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO" en /es/deusto/server/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO" en /es/deusto/server.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO" en /es/deusto/server/db/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO" en /es/deusto/server/db.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO" en /es/deusto/server/db/dao/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO" en /es/deusto/server/db/dao.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO" en /es/deusto/server/db/dao/DAO.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No hemos encontrado el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.DAO"
08:44:33> DEBUG (Log4JLogger.java:63): Registrando la clase "es.deusto.server.db.dao.DAO" no tener Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.dao.DAO" no tiene MetaData o annotaciones.
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO" en /META-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO" en /WEB-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO" en /package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO" en /es/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO" en /es.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO" en /es/deusto/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO" en /es/deusto.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO" en /es/deusto/server/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO" en /es/deusto/server.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO" en /es/deusto/server/db/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO" en /es/deusto/server/db.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO" en /es/deusto/server/db/dao/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO" en /es/deusto/server/db/dao.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO" en /es/deusto/server/db/dao/IDAO.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No hemos encontrado el MetaData del tipo "jdo" por la clase "es.deusto.server.db.dao.IDAO"
08:44:33> DEBUG (Log4JLogger.java:63): Registrando la clase "es.deusto.server.db.dao.IDAO" no tener Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.dao.IDAO" no tiene MetaData o annotaciones.
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.Company" tiene anotaciones de JDO y vamos a usarlas.
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.Game" tiene anotaciones de JDO y vamos a usarlas.
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.Genre" tiene anotaciones de JDO y vamos a usarlas.
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.License" tiene anotaciones de JDO y vamos a usarlas.
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.User" tiene anotaciones de JDO y vamos a usarlas.
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.DB" en /META-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.DB" en /WEB-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.DB" en /package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.DB" en /es/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.DB" en /es.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.DB" en /es/deusto/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.DB" en /es/deusto.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.DB" en /es/deusto/server/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.DB" en /es/deusto/server.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.DB" en /es/deusto/server/db/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.DB" en /es/deusto/server/db.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.DB" en /es/deusto/server/db/DB.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No hemos encontrado el MetaData del tipo "jdo" por la clase "es.deusto.server.db.DB"
08:44:33> DEBUG (Log4JLogger.java:63): Registrando la clase "es.deusto.server.db.DB" no tener Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.DB" no tiene MetaData o annotaciones.
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.IDB" en /META-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.IDB" en /WEB-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.IDB" en /package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.IDB" en /es/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.IDB" en /es.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.IDB" en /es/deusto/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.IDB" en /es/deusto.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.IDB" en /es/deusto/server/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.IDB" en /es/deusto/server.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.IDB" en /es/deusto/server/db/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.IDB" en /es/deusto/server/db.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.db.IDB" en /es/deusto/server/db/IDB.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No hemos encontrado el MetaData del tipo "jdo" por la clase "es.deusto.server.db.IDB"
08:44:33> DEBUG (Log4JLogger.java:63): Registrando la clase "es.deusto.server.db.IDB" no tener Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.IDB" no tiene MetaData o annotaciones.
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.IRemote" en /META-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.IRemote" en /WEB-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.IRemote" en /package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.IRemote" en /es/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.IRemote" en /es.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.IRemote" en /es/deusto/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.IRemote" en /es/deusto.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.IRemote" en /es/deusto/server/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.IRemote" en /es/deusto/server.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.IRemote" en /es/deusto/server/remote/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.IRemote" en /es/deusto/server/remote.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.IRemote" en /es/deusto/server/remote/IRemote.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No hemos encontrado el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.IRemote"
08:44:33> DEBUG (Log4JLogger.java:63): Registrando la clase "es.deusto.server.remote.IRemote" no tener Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.remote.IRemote" no tiene MetaData o annotaciones.
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.Remote" en /META-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.Remote" en /WEB-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.Remote" en /package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.Remote" en /es/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.Remote" en /es.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.Remote" en /es/deusto/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.Remote" en /es/deusto.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.Remote" en /es/deusto/server/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.Remote" en /es/deusto/server.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.Remote" en /es/deusto/server/remote/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.Remote" en /es/deusto/server/remote.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.Remote" en /es/deusto/server/remote/Remote.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No hemos encontrado el MetaData del tipo "jdo" por la clase "es.deusto.server.remote.Remote"
08:44:33> DEBUG (Log4JLogger.java:63): Registrando la clase "es.deusto.server.remote.Remote" no tener Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.remote.Remote" no tiene MetaData o annotaciones.
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.Server" en /META-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.Server" en /WEB-INF/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.Server" en /package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.Server" en /es/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.Server" en /es.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.Server" en /es/deusto/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.Server" en /es/deusto.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.Server" en /es/deusto/server/package.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.Server" en /es/deusto/server.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No encontramos el MetaData del tipo "jdo" por la clase "es.deusto.server.Server" en /es/deusto/server/Server.jdo
08:44:33> DEBUG (Log4JLogger.java:63): No hemos encontrado el MetaData del tipo "jdo" por la clase "es.deusto.server.Server"
08:44:33> DEBUG (Log4JLogger.java:63): Registrando la clase "es.deusto.server.Server" no tener Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.Server" no tiene MetaData o annotaciones.
08:44:33> DEBUG (Log4JLogger.java:63): Populación del MetaData ...
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.Company" : Populando Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.Game" : Populando Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.Game" campo "price" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.Game" campo "discount" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.Genre" : Populando Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.License" : Populando Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.License" campo "isUsed" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.User" : Populando Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.User" campo "password" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.User" campo "isSuperuser" : añadiendo el Meta-Data por el campo como no estaba en la definición de Meta-Data.
08:44:33> DEBUG (Log4JLogger.java:63): Inicialisación del MetaData ...
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.Company" : Inicializando Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.Game" : Inicializando Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.Genre" : Inicializando Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.License" : Inicializando Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): Clase "es.deusto.server.db.data.User" : Inicializando Meta-Data
08:44:33> DEBUG (Log4JLogger.java:63): MetaData Management : Carga de Metadata ya ha terminado
08:44:33> DEBUG (Log4JLogger.java:63): Enhance de la clase "es.deusto.server.db.data.Company" empezando ...
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no implementa el interfaz "org.datanucleus.enhancement.Persistable"!
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no implementa el interfaz "org.datanucleus.enhancement.Detachable"!
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el campo "dnStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el campo "dnDetachedState" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el campo "dnInheritedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el campo "dnFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el campo "dnFieldTypes" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el campo "dnFieldNames" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el campo "dnFieldFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el campo "dnPersistableSuperclass" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnReplaceField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnGetStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnIsTransactional" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnNewInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnNewInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnSuperClone" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnProvideFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "___dn$loadClass" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnIsDirty" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnReplaceStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnReplaceFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnIsDetached" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnMakeDirty" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnIsDeleted" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnProvideField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnPreSerialize" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnGetObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnGetVersion" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnIsNew" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnCopyField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnGetExecutionContext" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnCopyFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnReplaceDetachedState" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnIsPersistent" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "dnReplaceFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Company" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el interfaz: org.datanucleus.enhancement.Detachable
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el interfaz: org.datanucleus.enhancement.Persistable
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.Company.name"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.Company.companyGames"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.getCompanyGames, cambiando el uso del campo "es.deusto.server.db.data.Company.companyGames" para utilisar "dnGetcompanyGames()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.setCompanyGames, cambiando el uso del campo "es.deusto.server.db.data.Company.companyGames" para utilisar "dnSetcompanyGames()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.addGame, cambiando el uso del campo "es.deusto.server.db.data.Company.companyGames" para utilisar "dnGetcompanyGames()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.removeGame, cambiando el uso del campo "es.deusto.server.db.data.Company.companyGames" para utilisar "dnGetcompanyGames()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.Company.name"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.Company.companyGames"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.Company.name"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.getName, cambiando el uso del campo "es.deusto.server.db.data.Company.name" para utilisar "dnGetname()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.setName, cambiando el uso del campo "es.deusto.server.db.data.Company.name" para utilisar "dnSetname()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.toString, cambiando el uso del campo "es.deusto.server.db.data.Company.companyGames" para utilisar "dnGetcompanyGames()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.toString, cambiando el uso del campo "es.deusto.server.db.data.Company.name" para utilisar "dnGetname()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.toString, cambiando el uso del campo "es.deusto.server.db.data.Company.companyGames" para utilisar "dnGetcompanyGames()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Company.toString, cambiando el uso del campo "es.deusto.server.db.data.Company.name" para utilisar "dnGetname()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "org.datanucleus.enhancement.StateManager dnStateManager"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "byte dnFlags"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.Object; dnDetachedState"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[B dnFieldFlags"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "java.lang.Class dnPersistableSuperclass"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.String; dnFieldNames"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "int dnInheritedFieldCount"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void <clinit>()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetObjectId()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetVersion()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnPreSerialize()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.StateManager dnGetStateManager()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDeleted()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDirty()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsNew()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsPersistent()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsTransactional()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnMakeDirty(java.lang.String fieldName)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnProvideFields([I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceFields([I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceFlags()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceDetachedState()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDetached()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceField(int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnProvideField(int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyField(es.deusto.server.db.data.Company obj, int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyFields(java.lang.Object obj, [I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[B __dnFieldFlagsInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "int __dnGetInheritedFieldCount()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "int dnGetManagedFieldCount()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Class ___dn$loadClass(java.lang.String className)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnSuperClone()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void writeObject(java.io.ObjectOutputStream out)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.util.List dnGetcompanyGames(es.deusto.server.db.data.Company objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetcompanyGames(es.deusto.server.db.data.Company objPC, java.util.List val)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.String dnGetname(es.deusto.server.db.data.Company objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetname(es.deusto.server.db.data.Company objPC, java.lang.String val)"
08:44:33> INFO  (Log4JLogger.java:82): Escribiendo el archivo de clase "/Users/javiercarazo/Documents/workspace/SPQ/SPQ09/Lurrun/target/classes/es/deusto/server/db/data/Company.class" con definicion enhanced
08:44:33> INFO  (Log4JLogger.java:82): ENHANCED (Persistable) : es.deusto.server.db.data.Company
08:44:33> DEBUG (Log4JLogger.java:63): Enhance de la clase "es.deusto.server.db.data.Company" ha terminado
08:44:33> DEBUG (Log4JLogger.java:63): Enhance de la clase "es.deusto.server.db.data.Game" empezando ...
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no implementa el interfaz "org.datanucleus.enhancement.Persistable"!
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no implementa el interfaz "org.datanucleus.enhancement.Detachable"!
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el campo "dnStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el campo "dnDetachedState" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el campo "dnInheritedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el campo "dnFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el campo "dnFieldTypes" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el campo "dnFieldNames" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el campo "dnFieldFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el campo "dnPersistableSuperclass" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnReplaceField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnGetStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnIsTransactional" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnNewInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnNewInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnSuperClone" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnProvideFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "___dn$loadClass" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnIsDirty" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnReplaceStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnReplaceFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnIsDetached" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnMakeDirty" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnIsDeleted" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnProvideField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnPreSerialize" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnGetObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnGetVersion" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnIsNew" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnCopyField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnGetExecutionContext" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnCopyFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnReplaceDetachedState" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnIsPersistent" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "dnReplaceFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Game" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el interfaz: org.datanucleus.enhancement.Detachable
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el interfaz: org.datanucleus.enhancement.Persistable
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.Game.licenses"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.Game.name"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.Game.price"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.Game.discount"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.Game.licenses"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.toString, cambiando el uso del campo "es.deusto.server.db.data.Game.name" para utilisar "dnGetname()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.toString, cambiando el uso del campo "es.deusto.server.db.data.Game.price" para utilisar "dnGetprice()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.toString, cambiando el uso del campo "es.deusto.server.db.data.Game.discount" para utilisar "dnGetdiscount()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.getGenre, cambiando el uso del campo "es.deusto.server.db.data.Game.genre" para utilisar "dnGetgenre()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.setGenre, cambiando el uso del campo "es.deusto.server.db.data.Game.genre" para utilisar "dnSetgenre()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.getCompany, cambiando el uso del campo "es.deusto.server.db.data.Game.company" para utilisar "dnGetcompany()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.setCompany, cambiando el uso del campo "es.deusto.server.db.data.Game.company" para utilisar "dnSetcompany()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.getName, cambiando el uso del campo "es.deusto.server.db.data.Game.name" para utilisar "dnGetname()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.setName, cambiando el uso del campo "es.deusto.server.db.data.Game.name" para utilisar "dnSetname()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.getPrice, cambiando el uso del campo "es.deusto.server.db.data.Game.price" para utilisar "dnGetprice()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.setPrice, cambiando el uso del campo "es.deusto.server.db.data.Game.price" para utilisar "dnSetprice()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.getDiscount, cambiando el uso del campo "es.deusto.server.db.data.Game.discount" para utilisar "dnGetdiscount()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.setDiscount, cambiando el uso del campo "es.deusto.server.db.data.Game.discount" para utilisar "dnSetdiscount()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.addLicense, cambiando el uso del campo "es.deusto.server.db.data.Game.licenses" para utilisar "dnGetlicenses()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.removeLicense, cambiando el uso del campo "es.deusto.server.db.data.Game.licenses" para utilisar "dnGetlicenses()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Game.getLicenses, cambiando el uso del campo "es.deusto.server.db.data.Game.licenses" para utilisar "dnGetlicenses()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "org.datanucleus.enhancement.StateManager dnStateManager"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "byte dnFlags"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.Object; dnDetachedState"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[B dnFieldFlags"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "java.lang.Class dnPersistableSuperclass"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.String; dnFieldNames"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "int dnInheritedFieldCount"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void <clinit>()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetObjectId()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetVersion()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnPreSerialize()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.StateManager dnGetStateManager()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDeleted()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDirty()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsNew()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsPersistent()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsTransactional()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnMakeDirty(java.lang.String fieldName)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnProvideFields([I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceFields([I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceFlags()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceDetachedState()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDetached()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceField(int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnProvideField(int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyField(es.deusto.server.db.data.Game obj, int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyFields(java.lang.Object obj, [I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[B __dnFieldFlagsInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "int __dnGetInheritedFieldCount()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "int dnGetManagedFieldCount()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Class ___dn$loadClass(java.lang.String className)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnSuperClone()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void writeObject(java.io.ObjectOutputStream out)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "es.deusto.server.db.data.Company dnGetcompany(es.deusto.server.db.data.Game objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetcompany(es.deusto.server.db.data.Game objPC, es.deusto.server.db.data.Company val)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "double dnGetdiscount(es.deusto.server.db.data.Game objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetdiscount(es.deusto.server.db.data.Game objPC, double val)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "es.deusto.server.db.data.Genre dnGetgenre(es.deusto.server.db.data.Game objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetgenre(es.deusto.server.db.data.Game objPC, es.deusto.server.db.data.Genre val)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.util.List dnGetlicenses(es.deusto.server.db.data.Game objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetlicenses(es.deusto.server.db.data.Game objPC, java.util.List val)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.String dnGetname(es.deusto.server.db.data.Game objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetname(es.deusto.server.db.data.Game objPC, java.lang.String val)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "double dnGetprice(es.deusto.server.db.data.Game objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetprice(es.deusto.server.db.data.Game objPC, double val)"
08:44:33> INFO  (Log4JLogger.java:82): Escribiendo el archivo de clase "/Users/javiercarazo/Documents/workspace/SPQ/SPQ09/Lurrun/target/classes/es/deusto/server/db/data/Game.class" con definicion enhanced
08:44:33> INFO  (Log4JLogger.java:82): ENHANCED (Persistable) : es.deusto.server.db.data.Game
08:44:33> DEBUG (Log4JLogger.java:63): Enhance de la clase "es.deusto.server.db.data.Game" ha terminado
08:44:33> DEBUG (Log4JLogger.java:63): Enhance de la clase "es.deusto.server.db.data.Genre" empezando ...
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no implementa el interfaz "org.datanucleus.enhancement.Persistable"!
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no implementa el interfaz "org.datanucleus.enhancement.Detachable"!
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el campo "dnStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el campo "dnDetachedState" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el campo "dnInheritedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el campo "dnFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el campo "dnFieldTypes" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el campo "dnFieldNames" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el campo "dnFieldFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el campo "dnPersistableSuperclass" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnReplaceField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnGetStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnIsTransactional" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnNewInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnNewInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnSuperClone" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnProvideFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "___dn$loadClass" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnIsDirty" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnReplaceStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnReplaceFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnIsDetached" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnMakeDirty" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnIsDeleted" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnProvideField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnPreSerialize" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnGetObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnGetVersion" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnIsNew" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnCopyField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnGetExecutionContext" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnCopyFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnReplaceDetachedState" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnIsPersistent" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "dnReplaceFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.Genre" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el interfaz: org.datanucleus.enhancement.Detachable
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el interfaz: org.datanucleus.enhancement.Persistable
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Genre.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.Genre.genreGames"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Genre.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.Genre.name"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Genre.addGame, cambiando el uso del campo "es.deusto.server.db.data.Genre.genreGames" para utilisar "dnGetgenreGames()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Genre.getGenreGames, cambiando el uso del campo "es.deusto.server.db.data.Genre.genreGames" para utilisar "dnGetgenreGames()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Genre.setGenreGames, cambiando el uso del campo "es.deusto.server.db.data.Genre.genreGames" para utilisar "dnSetgenreGames()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Genre.removeGame, cambiando el uso del campo "es.deusto.server.db.data.Genre.genreGames" para utilisar "dnGetgenreGames()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Genre.getName, cambiando el uso del campo "es.deusto.server.db.data.Genre.name" para utilisar "dnGetname()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Genre.toString, cambiando el uso del campo "es.deusto.server.db.data.Genre.genreGames" para utilisar "dnGetgenreGames()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Genre.toString, cambiando el uso del campo "es.deusto.server.db.data.Genre.name" para utilisar "dnGetname()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Genre.toString, cambiando el uso del campo "es.deusto.server.db.data.Genre.genreGames" para utilisar "dnGetgenreGames()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Genre.toString, cambiando el uso del campo "es.deusto.server.db.data.Genre.name" para utilisar "dnGetname()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.Genre.setName, cambiando el uso del campo "es.deusto.server.db.data.Genre.name" para utilisar "dnSetname()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "org.datanucleus.enhancement.StateManager dnStateManager"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "byte dnFlags"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.Object; dnDetachedState"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[B dnFieldFlags"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "java.lang.Class dnPersistableSuperclass"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.String; dnFieldNames"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "int dnInheritedFieldCount"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void <clinit>()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el constructor "es.deusto.server.db.data.Genre()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetObjectId()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetVersion()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnPreSerialize()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.StateManager dnGetStateManager()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDeleted()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDirty()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsNew()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsPersistent()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsTransactional()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnMakeDirty(java.lang.String fieldName)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnProvideFields([I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceFields([I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceFlags()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceDetachedState()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDetached()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceField(int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnProvideField(int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyField(es.deusto.server.db.data.Genre obj, int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyFields(java.lang.Object obj, [I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[B __dnFieldFlagsInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "int __dnGetInheritedFieldCount()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "int dnGetManagedFieldCount()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Class ___dn$loadClass(java.lang.String className)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnSuperClone()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void writeObject(java.io.ObjectOutputStream out)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.util.List dnGetgenreGames(es.deusto.server.db.data.Genre objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetgenreGames(es.deusto.server.db.data.Genre objPC, java.util.List val)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.String dnGetname(es.deusto.server.db.data.Genre objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetname(es.deusto.server.db.data.Genre objPC, java.lang.String val)"
08:44:33> INFO  (Log4JLogger.java:82): Escribiendo el archivo de clase "/Users/javiercarazo/Documents/workspace/SPQ/SPQ09/Lurrun/target/classes/es/deusto/server/db/data/Genre.class" con definicion enhanced
08:44:33> INFO  (Log4JLogger.java:82): ENHANCED (Persistable) : es.deusto.server.db.data.Genre
08:44:33> DEBUG (Log4JLogger.java:63): Enhance de la clase "es.deusto.server.db.data.Genre" ha terminado
08:44:33> DEBUG (Log4JLogger.java:63): Enhance de la clase "es.deusto.server.db.data.License" empezando ...
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no implementa el interfaz "org.datanucleus.enhancement.Persistable"!
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no implementa el interfaz "org.datanucleus.enhancement.Detachable"!
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el campo "dnStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el campo "dnDetachedState" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el campo "dnInheritedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el campo "dnFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el campo "dnFieldTypes" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el campo "dnFieldNames" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el campo "dnFieldFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el campo "dnPersistableSuperclass" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnReplaceField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnGetStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnIsTransactional" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnNewInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnNewInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnSuperClone" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnProvideFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "___dn$loadClass" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnIsDirty" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnReplaceStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnReplaceFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnIsDetached" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnMakeDirty" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnIsDeleted" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnProvideField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnPreSerialize" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnGetObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnGetVersion" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnIsNew" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnCopyField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnGetExecutionContext" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnCopyFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnReplaceDetachedState" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnIsPersistent" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "dnReplaceFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.License" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el interfaz: org.datanucleus.enhancement.Detachable
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el interfaz: org.datanucleus.enhancement.Persistable
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.isUsed, cambiando el uso del campo "es.deusto.server.db.data.License.isUsed" para utilisar "dnGetisUsed()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.setUsed, cambiando el uso del campo "es.deusto.server.db.data.License.isUsed" para utilisar "dnSetisUsed()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.License.gameKey"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.License.isUsed"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.toString, cambiando el uso del campo "es.deusto.server.db.data.License.gameKey" para utilisar "dnGetgameKey()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.toString, cambiando el uso del campo "es.deusto.server.db.data.License.isUsed" para utilisar "dnGetisUsed()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.toString, cambiando el uso del campo "es.deusto.server.db.data.License.game" para utilisar "dnGetgame()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.getGameKey, cambiando el uso del campo "es.deusto.server.db.data.License.gameKey" para utilisar "dnGetgameKey()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.setGameKey, cambiando el uso del campo "es.deusto.server.db.data.License.gameKey" para utilisar "dnSetgameKey()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.getGame, cambiando el uso del campo "es.deusto.server.db.data.License.game" para utilisar "dnGetgame()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.setGame, cambiando el uso del campo "es.deusto.server.db.data.License.game" para utilisar "dnSetgame()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.getUser, cambiando el uso del campo "es.deusto.server.db.data.License.user" para utilisar "dnGetuser()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.setUser, cambiando el uso del campo "es.deusto.server.db.data.License.user" para utilisar "dnSetuser()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.License.gameKey"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.License.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.License.isUsed"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "org.datanucleus.enhancement.StateManager dnStateManager"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "byte dnFlags"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.Object; dnDetachedState"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[B dnFieldFlags"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "java.lang.Class dnPersistableSuperclass"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.String; dnFieldNames"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "int dnInheritedFieldCount"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void <clinit>()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetObjectId()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetVersion()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnPreSerialize()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.StateManager dnGetStateManager()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDeleted()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDirty()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsNew()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsPersistent()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsTransactional()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnMakeDirty(java.lang.String fieldName)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnProvideFields([I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceFields([I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceFlags()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceDetachedState()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDetached()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceField(int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnProvideField(int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyField(es.deusto.server.db.data.License obj, int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyFields(java.lang.Object obj, [I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[B __dnFieldFlagsInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "int __dnGetInheritedFieldCount()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "int dnGetManagedFieldCount()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Class ___dn$loadClass(java.lang.String className)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnSuperClone()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void writeObject(java.io.ObjectOutputStream out)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "es.deusto.server.db.data.Game dnGetgame(es.deusto.server.db.data.License objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetgame(es.deusto.server.db.data.License objPC, es.deusto.server.db.data.Game val)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.String dnGetgameKey(es.deusto.server.db.data.License objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetgameKey(es.deusto.server.db.data.License objPC, java.lang.String val)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnGetisUsed(es.deusto.server.db.data.License objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetisUsed(es.deusto.server.db.data.License objPC, boolean val)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "es.deusto.server.db.data.User dnGetuser(es.deusto.server.db.data.License objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetuser(es.deusto.server.db.data.License objPC, es.deusto.server.db.data.User val)"
08:44:33> INFO  (Log4JLogger.java:82): Escribiendo el archivo de clase "/Users/javiercarazo/Documents/workspace/SPQ/SPQ09/Lurrun/target/classes/es/deusto/server/db/data/License.class" con definicion enhanced
08:44:33> INFO  (Log4JLogger.java:82): ENHANCED (Persistable) : es.deusto.server.db.data.License
08:44:33> DEBUG (Log4JLogger.java:63): Enhance de la clase "es.deusto.server.db.data.License" ha terminado
08:44:33> DEBUG (Log4JLogger.java:63): Enhance de la clase "es.deusto.server.db.data.User" empezando ...
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no implementa el interfaz "org.datanucleus.enhancement.Persistable"!
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no implementa el interfaz "org.datanucleus.enhancement.Detachable"!
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el campo "dnStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el campo "dnDetachedState" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el campo "dnInheritedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el campo "dnFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el campo "dnFieldTypes" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el campo "dnFieldNames" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el campo "dnFieldFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el campo "dnPersistableSuperclass" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnReplaceField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnGetStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnIsTransactional" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnNewInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnNewInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnSuperClone" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnProvideFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "___dn$loadClass" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnGetManagedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnIsDirty" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnReplaceStateManager" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnReplaceFlags" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnIsDetached" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnMakeDirty" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "__dnPersistableSuperclassInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnIsDeleted" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "__dnFieldFlagsInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "__dnFieldTypesInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnProvideField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnPreSerialize" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnGetObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnGetVersion" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnGetTransactionalObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnIsNew" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnCopyKeyFieldsToObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnCopyField" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnCopyKeyFieldsFromObjectId" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnGetExecutionContext" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnCopyFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "__dnGetInheritedFieldCount" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnNewObjectIdInstance" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnReplaceDetachedState" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnIsPersistent" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "dnReplaceFields" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): La clase "es.deusto.server.db.data.User" no tiene el metodo "__dnFieldNamesInit" pero lo necesita
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el interfaz: org.datanucleus.enhancement.Detachable
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el interfaz: org.datanucleus.enhancement.Persistable
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.User.login"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.User.password"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.User.isSuperuser"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.User.licenses"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.User.login"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.User.password"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.User.isSuperuser"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.getSuperuser, cambiando el uso del campo "es.deusto.server.db.data.User.isSuperuser" para utilisar "dnGetisSuperuser()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.setSuperuser, cambiando el uso del campo "es.deusto.server.db.data.User.isSuperuser" para utilisar "dnSetisSuperuser()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.User.login"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.User.password"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.User.isSuperuser"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.User.licenses"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.User.login"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.<init> : ignorando enhance de set del campo "es.deusto.server.db.data.User.password"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.addLicense, cambiando el uso del campo "es.deusto.server.db.data.User.licenses" para utilisar "dnGetlicenses()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.removeLicense, cambiando el uso del campo "es.deusto.server.db.data.User.licenses" para utilisar "dnGetlicenses()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.getLicenses, cambiando el uso del campo "es.deusto.server.db.data.User.licenses" para utilisar "dnGetlicenses()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.getLogin, cambiando el uso del campo "es.deusto.server.db.data.User.login" para utilisar "dnGetlogin()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.getPassword, cambiando el uso del campo "es.deusto.server.db.data.User.password" para utilisar "dnGetpassword()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.setPassword, cambiando el uso del campo "es.deusto.server.db.data.User.password" para utilisar "dnSetpassword()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.toString, cambiando el uso del campo "es.deusto.server.db.data.User.licenses" para utilisar "dnGetlicenses()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.toString, cambiando el uso del campo "es.deusto.server.db.data.User.login" para utilisar "dnGetlogin()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.toString, cambiando el uso del campo "es.deusto.server.db.data.User.password" para utilisar "dnGetpassword()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.toString, cambiando el uso del campo "es.deusto.server.db.data.User.isSuperuser" para utilisar "dnGetisSuperuser()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.toString, cambiando el uso del campo "es.deusto.server.db.data.User.licenses" para utilisar "dnGetlicenses()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.toString, cambiando el uso del campo "es.deusto.server.db.data.User.login" para utilisar "dnGetlogin()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.toString, cambiando el uso del campo "es.deusto.server.db.data.User.password" para utilisar "dnGetpassword()"
08:44:33> DEBUG (Log4JLogger.java:63): Enhancing metodo original es.deusto.server.db.data.User.toString, cambiando el uso del campo "es.deusto.server.db.data.User.isSuperuser" para utilisar "dnGetisSuperuser()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "org.datanucleus.enhancement.StateManager dnStateManager"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "byte dnFlags"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.Object; dnDetachedState"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[B dnFieldFlags"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "java.lang.Class dnPersistableSuperclass"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.Class; dnFieldTypes"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "[Ljava.lang.String; dnFieldNames"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el campo "int dnInheritedFieldCount"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void <clinit>()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el constructor "es.deusto.server.db.data.User()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsFromObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldConsumer fc, java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsFromObjectId(java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsToObjectId(java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyKeyFieldsToObjectId(org.datanucleus.enhancement.Persistable$ObjectIdFieldSupplier fs, java.lang.Object oid)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetObjectId()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetVersion()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnPreSerialize()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.ExecutionContextReference dnGetExecutionContext()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.StateManager dnGetStateManager()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnGetTransactionalObjectId()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDeleted()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDirty()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsNew()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsPersistent()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsTransactional()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnMakeDirty(java.lang.String fieldName)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnNewObjectIdInstance()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnNewObjectIdInstance(java.lang.Object key)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnProvideFields([I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceFields([I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceFlags()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceStateManager(org.datanucleus.enhancement.StateManager sm)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceDetachedState()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnIsDetached()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "org.datanucleus.enhancement.Persistable dnNewInstance(org.datanucleus.enhancement.StateManager sm, java.lang.Object obj)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnReplaceField(int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnProvideField(int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyField(es.deusto.server.db.data.User obj, int index)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnCopyFields(java.lang.Object obj, [I indices)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[Ljava.lang.String; __dnFieldNamesInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[Ljava.lang.Class; __dnFieldTypesInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "[B __dnFieldFlagsInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "int __dnGetInheritedFieldCount()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "int dnGetManagedFieldCount()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Class __dnPersistableSuperclassInit()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Class ___dn$loadClass(java.lang.String className)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.Object dnSuperClone()"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void writeObject(java.io.ObjectOutputStream out)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "boolean dnGetisSuperuser(es.deusto.server.db.data.User objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetisSuperuser(es.deusto.server.db.data.User objPC, boolean val)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.util.List dnGetlicenses(es.deusto.server.db.data.User objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetlicenses(es.deusto.server.db.data.User objPC, java.util.List val)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.String dnGetlogin(es.deusto.server.db.data.User objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetlogin(es.deusto.server.db.data.User objPC, java.lang.String val)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "java.lang.String dnGetpassword(es.deusto.server.db.data.User objPC)"
08:44:33> DEBUG (Log4JLogger.java:63): Agregando el metodo "void dnSetpassword(es.deusto.server.db.data.User objPC, java.lang.String val)"
08:44:33> INFO  (Log4JLogger.java:82): Escribiendo el archivo de clase "/Users/javiercarazo/Documents/workspace/SPQ/SPQ09/Lurrun/target/classes/es/deusto/server/db/data/User.class" con definicion enhanced
08:44:33> INFO  (Log4JLogger.java:82): ENHANCED (Persistable) : es.deusto.server.db.data.User
08:44:33> DEBUG (Log4JLogger.java:63): Enhance de la clase "es.deusto.server.db.data.User" ha terminado
08:44:33> INFO  (Log4JLogger.java:82): DataNucleus Enhancer ha terminado con exito para 5 clases. Tiempos : input=140 ms, enhance=137 ms, total=277 ms. Compruebe el LOG para los detalles
